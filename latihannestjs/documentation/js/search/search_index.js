var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.18,1,2.053]],["body/controllers/AppController.html",[0,1.864,1,3.244,2,1.609,3,0.385,4,0.333,5,0.333,6,3.334,7,0.615,8,1.716,9,4.829,10,1.609,11,0.032,12,0.896,13,3.994,14,1.362,15,1.864,16,0.624,17,0.82,18,2.896,19,3.334,20,0.385,21,0.02,22,2.315,23,3.334,24,1.48,25,3.994,26,0.025,27,0.025]],["title/modules/AppModule.html",[28,1,29,2.053]],["body/modules/AppModule.html",[1,2.898,2,1.548,3,0.258,4,0.223,5,0.223,11,0.032,16,0.73,17,0.55,18,2.845,19,2.236,20,0.258,21,0.013,26,0.019,27,0.019,28,1.412,29,4.02,30,1.176,31,1.176,32,1.408,33,1.408,34,1.176,35,2.363,36,2.363,37,2.236,38,2.236,39,2.236,40,2.236,41,3.137,42,2.375,43,3.137,44,3.137,45,2.428,46,2.02,47,1.408,48,1.284,49,2.679,50,2.478,51,2.679,52,2.679,53,1.727,54,1.727,55,2.679,56,2.679,57,2.236,58,2.236,59,2.236,60,2.679,61,2.679,62,2.679,63,2.679,64,2.679,65,2.679]],["title/injectables/AppService.html",[18,1.674,66,0.779]],["body/injectables/AppService.html",[3,0.405,4,0.351,5,0.351,7,0.648,8,1.772,9,4.918,11,0.031,12,0.943,14,1.434,15,1.925,16,0.521,17,0.863,18,2.731,20,0.405,21,0.021,24,1.558,26,0.026,27,0.026,66,1.27,67,1.845,68,3.51,69,4.205,70,4.205,71,4.205]],["title/controllers/AuthController.html",[0,1.18,72,2.053]],["body/controllers/AuthController.html",[0,0.828,2,0.901,3,0.215,4,0.186,5,0.403,7,0.344,8,1.148,10,1.814,11,0.032,12,1.01,14,1.535,16,0.652,17,0.459,20,0.215,21,0.011,22,1.296,24,1.668,26,0.017,27,0.017,72,2.169,73,1.866,74,1.623,75,2.236,76,2.55,77,2.809,78,2.809,79,2.809,80,2.809,81,1.866,82,2.61,83,3.365,84,2.236,85,1.814,86,1.668,87,0.83,88,1.668,89,2.538,90,2.158,91,2.236,92,2.236,93,2.236,94,3.683,95,1.866,96,2.61,97,3.365,98,2.236,99,2.236,100,4.047,101,2.236,102,2.236,103,1.623,104,1.623,105,1.623,106,3.365,107,1.866,108,3.365,109,1.866,110,2.127,111,1.866,112,1.866,113,1.296,114,2.236,115,2.236,116,1.866,117,1.866,118,3.365,119,2.236,120,2.236,121,2.236,122,2.158,123,2.236,124,2.236,125,2.236,126,2.809,127,2.236,128,2.236,129,1.296,130,2.169,131,2.236,132,1.441,133,1.441,134,2.236,135,2.236,136,2.236,137,2.236,138,2.236,139,2.236,140,2.236,141,2.236,142,2.236,143,2.236,144,2.236,145,2.236]],["title/injectables/AuthGuard.html",[66,0.779,113,1.846]],["body/injectables/AuthGuard.html",[3,0.509,4,0.264,5,0.264,7,0.487,8,1.472,11,0.032,12,0.968,14,1.472,16,0.609,17,0.649,20,0.305,21,0.016,24,1.599,26,0.021,27,0.021,66,1.055,67,1.387,85,1.739,86,1.599,87,0.649,88,1.599,113,2.849,130,3.563,146,2.639,147,2.782,148,4.316,149,5.28,150,4.316,151,3.161,152,5.28,153,3.161,154,4.316,155,4.316,156,4.316,157,4.914,158,4.316,159,3.161,160,4.914,161,4.316,162,2.639,163,3.161,164,2.037,165,3.161,166,2.639,167,2.037]],["title/modules/AuthModule.html",[28,1,41,1.846]],["body/modules/AuthModule.html",[2,1.697,3,0.294,4,0.254,5,0.254,11,0.032,16,0.717,17,0.626,20,0.294,21,0.015,26,0.021,27,0.021,28,1.515,30,1.339,31,1.339,32,1.604,33,1.604,34,1.339,35,2.536,36,1.604,41,3.511,42,2.477,46,2.214,47,1.604,48,1.462,50,2.715,53,1.967,72,3.11,110,2.967,111,2.547,130,1.967,164,1.967,168,2.547,169,3.051,170,2.547,171,3.272,172,3.051,173,3.051,174,3.051,175,3.051,176,2.215,177,3.051,178,3.051,179,3.051,180,2.215,181,3.051,182,3.051,183,2.547,184,3.051,185,3.051,186,2.547,187,3.051,188,2.547,189,2.547]],["title/injectables/AuthService.html",[66,0.779,110,1.674]],["body/injectables/AuthService.html",[3,0.154,4,0.133,5,0.133,7,0.246,8,0.881,11,0.032,12,0.988,14,1.403,15,1.632,16,0.546,17,0.327,20,0.154,21,0.008,24,1.524,26,0.013,27,0.013,45,1.508,54,1.028,66,0.632,67,0.7,76,2.451,77,2.718,78,2.157,79,2.157,80,2.157,81,2.157,82,2.171,85,1.774,86,1.789,87,0.904,88,1.632,89,2.438,90,1.972,95,2.157,96,2.171,109,1.331,110,1.358,112,1.331,122,2.457,129,2.553,130,1.028,132,2.099,133,2.099,166,3.126,167,2.414,176,1.158,188,1.331,189,2.157,190,1.331,191,3.257,192,1.665,193,1.158,194,4.638,195,1.595,196,1.665,197,1.595,198,3.744,199,1.595,200,1.331,201,1.331,202,2.157,203,1.595,204,2.584,205,2.111,206,1.595,207,3.197,208,1.595,209,2.584,210,4.404,211,1.595,212,3.744,213,1.595,214,1.595,215,2.584,216,1.595,217,1.331,218,2.157,219,2.584,220,3.744,221,2.652,222,2.584,223,1.595,224,1.595,225,3.257,226,1.595,227,1.595,228,1.595,229,2.718,230,1.595,231,1.595,232,3.744,233,2.584,234,1.875,235,2.584,236,1.595,237,1.595,238,2.584,239,1.595,240,1.595,241,1.595,242,2.157,243,1.595,244,1.595,245,1.888,246,1.595,247,3.744,248,1.158,249,1.595,250,1.595,251,1.595,252,2.584,253,1.595,254,1.158]],["title/classes/CreateSchoolDto.html",[21,0.016,255,1.674]],["body/classes/CreateSchoolDto.html",[3,0.296,4,0.256,5,0.256,7,0.473,10,2.205,11,0.031,12,1.227,15,2.247,16,0.381,20,0.296,21,0.021,26,0.021,27,0.021,87,1.123,88,2.096,221,3.121,255,2.225,256,1.348,257,4.722,258,2.23,259,1.857,260,4.842,261,4.842,262,4.842,263,4.842,264,3.072,265,3.072,266,3.072,267,3.072,268,3.072,269,3.072,270,3.072,271,3.072,272,3.072,273,3.072,274,3.121,275,4.233,276,4.355,277,3.279,278,3.072,279,2.565,280,1.615,281,3.072,282,3.072]],["title/classes/CreateTaskDto.html",[21,0.016,283,1.846]],["body/classes/CreateTaskDto.html",[3,0.365,4,0.316,5,0.316,7,0.583,10,1.96,11,0.031,12,1.205,15,2.101,16,0.469,20,0.365,21,0.024,26,0.024,27,0.024,87,1.103,205,2.332,256,1.662,259,2.135,270,3.532,274,3.465,277,3.116,280,1.991,283,2.82,284,3.162,285,3.902,286,3.465,287,3.465,288,3.788,289,3.788,290,3.788]],["title/injectables/JwtStrategy.html",[66,0.779,171,1.846]],["body/injectables/JwtStrategy.html",[3,0.331,4,0.286,5,0.286,7,0.529,8,1.556,11,0.032,12,1.023,14,1.171,16,0.635,17,0.704,20,0.331,21,0.017,24,1.272,26,0.023,27,0.023,66,1.115,67,1.506,76,2.249,85,1.383,86,1.69,87,0.704,88,1.272,90,1.645,147,2.941,164,2.213,171,2.645,180,3.72,183,2.865,186,2.865,192,3.303,202,2.865,207,2.492,291,2.865,292,4.562,293,4.562,294,3.433,295,4.562,296,3.433,297,3.433,298,3.433,299,3.433,300,2.865,301,3.433,302,3.433,303,3.433,304,3.433,305,3.433,306,3.433,307,3.433,308,3.433,309,3.433]],["title/classes/LoginDto.html",[21,0.016,82,1.846]],["body/classes/LoginDto.html",[3,0.378,4,0.327,5,0.327,7,0.604,10,2.004,11,0.031,12,1.116,15,2.129,16,0.486,20,0.378,21,0.025,26,0.025,27,0.025,82,2.884,87,1.021,221,3.522,234,3.967,256,1.722,259,2.183,273,3.612,274,3.522,277,2.884,280,2.062,310,3.275,311,3.923,312,3.923,313,3.923,314,3.923]],["title/modules/PrismaModule.html",[28,1,42,1.398]],["body/modules/PrismaModule.html",[3,0.365,4,0.316,5,0.316,11,0.031,16,0.603,17,0.777,20,0.365,21,0.019,26,0.024,27,0.024,28,1.688,30,1.662,31,1.662,32,1.991,33,1.991,34,1.662,35,2.825,36,2.825,42,2.68,45,2.569,46,2.557,47,1.991,48,1.816,315,3.788,316,3.788,317,3.788,318,3.788,319,3.788]],["title/injectables/PrismaService.html",[45,1.283,66,0.779]],["body/injectables/PrismaService.html",[3,0.339,4,0.293,5,0.293,7,0.541,8,1.581,11,0.032,12,1.039,14,1.581,16,0.574,17,0.721,20,0.339,21,0.017,26,0.023,27,0.023,45,1.867,66,1.133,67,1.542,76,2.582,85,1.416,86,1.302,87,0.721,88,1.302,122,1.685,147,2.987,320,2.934,321,5.185,322,4.634,323,5.884,324,4.634,325,5.512,326,3.515,327,3.515,328,3.515,329,2.934,330,3.515,331,3.515,332,3.515,333,3.515]],["title/classes/RegisterDto.html",[21,0.016,96,1.846]],["body/classes/RegisterDto.html",[3,0.353,4,0.305,5,0.305,7,0.564,10,2.131,11,0.031,12,1.186,15,2.204,16,0.454,20,0.353,21,0.024,26,0.024,27,0.024,86,1.959,87,1.085,96,2.759,221,3.409,234,3.839,256,1.607,259,2.089,270,2.658,273,3.455,274,3.61,277,3.066,279,3.056,280,1.925,334,3.056,335,3.661,336,3.661,337,3.661,338,3.661,339,3.661,340,3.661]],["title/classes/School.html",[21,0.016,341,2.053]],["body/classes/School.html",[3,0.46,4,0.398,5,0.398,11,0.029,20,0.46,21,0.024,26,0.028,27,0.028,256,2.096,341,3.617,342,3.987]],["title/controllers/SchoolController.html",[0,1.18,343,2.053]],["body/controllers/SchoolController.html",[0,0.783,2,0.851,3,0.204,4,0.176,5,0.176,7,0.325,8,1.099,10,1.897,11,0.032,12,1.056,14,1.606,15,2.021,16,0.542,17,0.433,20,0.204,21,0.01,22,1.224,23,1.763,24,1.745,26,0.016,27,0.016,74,1.533,76,2.6,85,1.762,86,1.62,87,0.897,88,1.62,89,2.925,90,2.257,103,2.34,104,1.533,105,2.837,122,2.257,129,2.73,132,3.036,133,3.036,245,2.877,254,2.837,255,2.609,341,1.362,343,2.078,344,1.763,345,2.34,346,3.651,347,2.691,348,2.691,349,1.763,350,2.112,351,2.112,352,1.763,353,3.223,354,2.112,355,1.763,356,3.223,357,2.112,358,1.763,359,3.086,360,3.223,361,2.112,362,1.763,363,1.533,364,2.054,365,1.763,366,1.763,367,2.34,368,1.763,369,2.112,370,2.112,371,2.112,372,2.112,373,2.112,374,2.112,375,1.763,376,2.112,377,2.112,378,2.112]],["title/modules/SchoolModule.html",[28,1,43,1.846]],["body/modules/SchoolModule.html",[2,1.887,3,0.344,4,0.298,5,0.298,11,0.032,16,0.687,17,0.733,20,0.344,21,0.018,26,0.023,27,0.023,28,1.641,30,1.568,31,1.568,32,1.878,33,1.878,34,1.568,35,2.747,36,1.878,42,2.594,43,3.542,46,2.462,47,1.878,48,1.712,50,3.019,53,2.303,343,3.369,364,3.106,365,2.982,379,2.982,380,3.572,381,2.982,382,3.572,383,3.572]],["title/injectables/SchoolService.html",[66,0.779,364,1.674]],["body/injectables/SchoolService.html",[3,0.229,4,0.198,5,0.198,7,0.366,8,1.201,11,0.032,12,1.164,14,1.689,16,0.575,17,0.487,20,0.229,21,0.012,22,1.377,24,1.835,26,0.017,27,0.017,45,1.869,54,1.531,66,0.861,67,1.042,76,2.654,85,1.996,86,1.835,87,1.017,88,1.835,89,1.85,90,2.375,122,2.224,192,1.531,193,1.724,196,2.269,205,2.7,245,3.008,254,2.555,255,2.727,345,2.555,346,3.872,347,2.939,348,2.939,349,2.939,352,2.939,355,2.939,358,2.939,359,3.197,364,1.85,366,1.982,367,2.555,368,1.982,384,1.982,385,2.375,386,2.375,387,2.375,388,2.375,389,2.375,390,2.375,391,2.375,392,2.375,393,2.375,394,2.375,395,2.375]],["title/controllers/TaskController.html",[0,1.18,396,2.053]],["body/controllers/TaskController.html",[0,0.833,2,0.905,3,0.217,4,0.187,5,0.187,7,0.346,8,1.152,10,1.95,11,0.032,12,1.085,14,1.65,16,0.6,17,0.461,20,0.217,21,0.011,22,1.303,24,1.793,26,0.017,27,0.017,74,1.631,76,2.629,85,1.818,86,1.672,87,0.833,88,1.672,89,2.373,90,2.32,94,3.513,103,3.513,104,1.631,105,2.452,107,1.876,113,1.303,122,2.32,126,4.04,205,1.946,245,2.947,283,2.617,362,1.876,363,1.631,375,1.876,396,2.178,397,1.876,398,1.303,399,2.82,400,2.82,401,3.768,402,2.82,403,3.388,404,2.247,405,2.247,406,2.247,407,1.876,408,2.247,409,2.247,410,2.247,411,2.247,412,1.876,413,2.247,414,2.247,415,1.876,416,2.617,417,2.247,418,2.247,419,4.514,420,2.247,421,2.247,422,2.134,423,1.876,424,1.876,425,1.876,426,2.247,427,2.247,428,2.247,429,2.247,430,2.247,431,2.247,432,2.247,433,2.247,434,2.247,435,2.247,436,2.247,437,2.247,438,2.247,439,2.247]],["title/modules/TaskModule.html",[28,1,44,1.846]],["body/modules/TaskModule.html",[2,1.887,3,0.344,4,0.298,5,0.298,11,0.032,16,0.687,17,0.733,20,0.344,21,0.018,26,0.023,27,0.023,28,1.641,30,1.568,31,1.568,32,1.878,33,1.878,34,1.568,35,2.747,36,1.878,42,2.594,44,3.542,46,2.462,47,1.878,48,1.712,50,3.019,53,2.303,396,3.369,422,3.106,423,2.982,440,2.982,441,3.572,442,2.982,443,3.572,444,3.572]],["title/injectables/TaskService.html",[66,0.779,422,1.674]],["body/injectables/TaskService.html",[3,0.186,4,0.161,5,0.161,7,0.297,8,1.024,11,0.032,12,1.073,14,1.54,16,0.56,17,0.395,20,0.186,21,0.01,24,1.673,26,0.015,27,0.015,45,1.678,54,1.242,66,0.734,67,0.846,76,2.554,85,1.819,86,1.673,87,0.927,88,1.673,89,3.111,90,2.165,94,2.678,122,2.165,129,2.618,132,2.911,133,2.911,192,1.936,193,1.399,196,1.936,205,2.692,207,2.18,218,2.507,229,1.608,242,1.608,245,2.896,283,2.415,285,3.024,286,1.242,287,1.242,363,1.399,399,2.507,400,2.507,401,3.478,402,2.507,403,2.507,407,2.507,412,2.507,415,2.507,416,2.415,422,1.578,424,1.608,425,1.608,445,1.608,446,1.927,447,3.003,448,1.927,449,1.927,450,1.927,451,1.927,452,1.927,453,1.927,454,1.927,455,1.608,456,1.927,457,1.927,458,3.003,459,1.927,460,3.003,461,1.927,462,4.166,463,1.927,464,1.927,465,3.003,466,1.927,467,1.927,468,1.927,469,1.927]],["title/classes/UpdateSchoolDto.html",[21,0.016,359,1.846]],["body/classes/UpdateSchoolDto.html",[3,0.421,4,0.365,5,0.365,11,0.031,16,0.659,20,0.421,21,0.022,26,0.026,27,0.026,147,3.431,255,2.298,256,1.919,258,3.174,345,3.174,359,3.085,367,3.174,470,3.649,471,5.322,472,4.372,473,3.649,474,3.649]],["title/classes/UpdateTaskDto.html",[21,0.016,416,1.846]],["body/classes/UpdateTaskDto.html",[3,0.365,4,0.316,5,0.316,7,0.583,10,1.96,11,0.031,12,1.205,15,2.101,16,0.469,20,0.365,21,0.024,26,0.024,27,0.024,87,1.103,205,2.332,256,1.662,259,2.135,276,4.487,277,3.116,280,1.991,285,3.902,286,3.465,287,3.465,416,2.82,475,3.162,476,3.788,477,4.865,478,3.788,479,3.788]],["title/coverage.html",[480,3.149]],["body/coverage.html",[0,1.864,1,1.821,5,0.236,6,2.359,11,0.032,18,1.485,21,0.028,26,0.02,27,0.02,34,1.24,45,1.138,66,1.384,68,2.359,72,1.821,73,2.359,82,1.638,87,0.58,96,1.638,110,1.485,113,1.638,146,2.359,167,1.821,171,1.638,190,2.359,248,2.051,255,1.485,257,2.359,258,2.898,283,1.638,284,2.359,291,2.359,310,2.359,320,2.359,334,2.359,341,1.821,342,2.359,343,1.821,344,2.359,359,1.638,364,1.485,384,2.359,396,1.821,397,2.359,398,1.638,416,1.638,422,1.485,445,2.359,470,2.359,475,2.359,480,2.051,481,2.359,482,2.825,483,2.825,484,6.373,485,3.992,486,2.825,487,5.031,488,4.629,489,5.031,490,2.359,491,2.825,492,5.031,493,4.629,494,2.898,495,1.821,496,2.825,497,2.825,498,2.825]],["title/dependencies.html",[31,1.68,499,2.224]],["body/dependencies.html",[11,0.032,17,0.784,21,0.024,26,0.024,27,0.024,31,1.677,57,3.189,58,3.189,116,3.189,117,3.189,162,3.189,164,2.463,176,2.773,180,2.773,217,3.189,280,2.008,300,4.084,329,3.189,455,3.189,473,3.189,474,3.189,500,4.893,501,3.821,502,3.821,503,3.821,504,3.821,505,3.821,506,3.821,507,3.821,508,3.821,509,3.821,510,3.821,511,3.821,512,3.821,513,3.821,514,3.821,515,3.821,516,3.821,517,3.821]],["title/miscellaneous/functions.html",[518,1.717,519,3.196]],["body/miscellaneous/functions.html",[7,0.744,11,0.028,26,0.028,27,0.028,34,2.627,490,4.031,518,3.112,519,4.031,520,4.829]],["title/index.html",[7,0.41,521,2.665,522,2.665]],["body/index.html",[0,0.643,4,0.145,11,0.031,26,0.014,27,0.014,28,0.545,48,2.193,59,1.45,167,1.783,196,1.783,480,1.261,481,2.309,523,2.767,524,1.737,525,5.375,526,1.737,527,5.136,528,1.737,529,5.852,530,4.8,531,1.737,532,1.737,533,1.737,534,5.554,535,1.737,536,4.8,537,1.737,538,1.737,539,1.737,540,2.767,541,1.737,542,3.448,543,1.737,544,3.448,545,1.737,546,2.767,547,1.737,548,1.737,549,1.737,550,3.933,551,3.933,552,2.767,553,1.737,554,1.737,555,2.767,556,1.737,557,1.737,558,1.737,559,2.767,560,1.737,561,1.737,562,1.737,563,1.737,564,1.737,565,1.737,566,2.767,567,3.933,568,2.767,569,1.737,570,1.737,571,1.737,572,1.737,573,3.933,574,4.984,575,4.576,576,1.737,577,2.767,578,1.737,579,1.737,580,1.737,581,1.737,582,1.737,583,4.576,584,2.767,585,3.933,586,1.737,587,2.767,588,1.737,589,1.737,590,2.767,591,4.576,592,3.933,593,1.737,594,1.737,595,2.767,596,1.737,597,1.737,598,1.737,599,1.737,600,3.933,601,1.737,602,1.737,603,2.767,604,1.737,605,1.737,606,1.737,607,1.737,608,1.737,609,1.737,610,2.767,611,1.737,612,1.737,613,1.737,614,2.767,615,1.737,616,1.737,617,1.737,618,3.283,619,2.767,620,1.737,621,1.737,622,1.737,623,1.737,624,1.737,625,1.737,626,1.737,627,1.737,628,2.767,629,1.737,630,1.737,631,1.737,632,1.737,633,3.448,634,1.737,635,1.737,636,1.737,637,1.737,638,1.737,639,1.737,640,2.767,641,1.737,642,1.737,643,1.737,644,1.737,645,1.737,646,2.767,647,1.737,648,1.737,649,1.737,650,2.767,651,2.767,652,1.737,653,1.737,654,1.737,655,1.737,656,1.737,657,1.737,658,1.737,659,1.737,660,1.737,661,1.737,662,1.45,663,1.737,664,1.737,665,1.737,666,1.737,667,1.737,668,1.737,669,1.45]],["title/modules.html",[30,1.904]],["body/modules.html",[11,0.026,26,0.026,27,0.026,29,2.832,30,1.928,41,2.547,42,1.928,43,2.547,44,2.547,618,5.116,670,6.129,671,6.129,672,6.129]],["title/overview.html",[673,3.622]],["body/overview.html",[2,1.204,11,0.031,18,2.508,26,0.021,27,0.021,28,0.939,29,4.04,30,1.312,31,1.312,32,1.571,33,1.571,34,1.312,35,1.571,36,1.571,37,2.495,38,2.495,39,2.495,40,2.495,41,3.453,42,2.614,43,3.334,44,3.334,45,2.43,46,2.183,47,1.571,48,1.433,67,1.312,110,2.508,168,2.495,170,2.495,171,2.766,256,1.312,364,2.508,379,2.495,381,2.495,422,2.508,440,2.495,442,2.495,495,1.927,673,2.495,674,2.989,675,2.17,676,4.153,677,2.17]],["title/properties.html",[259,1.68,499,2.224]],["body/properties.html",[11,0.031,26,0.028,27,0.028,259,2.085,662,3.965,669,3.965,678,4.75,679,4.75,680,4.75,681,4.75]],["title/interfaces/task.html",[398,1.846,495,2.053]],["body/interfaces/task.html",[3,0.348,4,0.302,5,0.302,7,0.557,11,0.032,15,2.065,20,0.455,26,0.023,27,0.023,87,1.079,129,2.096,205,2.263,259,2.072,286,3.389,287,3.389,398,2.737,494,2.625,495,2.331,675,3.427,677,3.427,682,3.616,683,5.257,684,3.616,685,3.616,686,3.616,687,3.616,688,3.019,689,4.652,690,4.652,691,3.019,692,3.941,693,3.019,694,3.941,695,3.019]],["title/miscellaneous/variables.html",[518,1.717,696,3.196]],["body/miscellaneous/variables.html",[7,0.624,11,0.032,26,0.025,27,0.025,87,0.831,200,3.38,201,3.38,248,3.685,398,2.347,494,2.94,518,2.61,675,3.685,677,3.685,688,3.38,689,4.852,690,4.852,691,3.38,692,4.237,693,3.38,694,4.237,695,3.38,696,3.38,697,4.05]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"interfaces/task.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":484,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":679,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":511,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":516,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":510,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":512,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":492,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":485,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":487,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":489,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":486,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":493,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":488,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":677,"title":{},"body":{"overview.html":{},"interfaces/task.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":503,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":502,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":501,"title":{},"body":{"dependencies.html":{}}}],["10.4.8",{"_index":500,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":692,"title":{},"body":{"interfaces/task.html":{},"miscellaneous/variables.html":{}}}],["200",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/SchoolController.html":{},"injectables/TaskService.html":{}}}],["3",{"_index":694,"title":{},"body":{"interfaces/task.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":675,"title":{},"body":{"overview.html":{},"interfaces/task.html":{},"miscellaneous/variables.html":{}}}],["4.0.1",{"_index":513,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":504,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":674,"title":{},"body":{"overview.html":{}}}],["5.0.2",{"_index":507,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":508,"title":{},"body":{"dependencies.html":{}}}],["5.22.0",{"_index":505,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":676,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":517,"title":{},"body":{"dependencies.html":{}}}],["accesstoken",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["address",{"_index":260,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["allowing",{"_index":604,"title":{},"body":{"index.html":{}}}],["already",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":656,"title":{},"body":{"index.html":{}}}],["api",{"_index":562,"title":{},"body":{"index.html":{}}}],["app",{"_index":327,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.close",{"_index":333,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":575,"title":{},"body":{"index.html":{}}}],["applications",{"_index":594,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["auth",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":173,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.service",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.guard",{"_index":426,"title":{},"body":{"controllers/TaskController.html":{}}}],["auth/auth.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":72,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":113,"title":{"injectables/AuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"controllers/TaskController.html":{},"coverage.html":{}}}],["authguardpassport",{"_index":163,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authguardpassport('jwt",{"_index":148,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authmodule",{"_index":41,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":662,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":110,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["automatic",{"_index":563,"title":{},"body":{"index.html":{}}}],["avatar",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["await",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["aws",{"_index":595,"title":{},"body":{"index.html":{}}}],["backers",{"_index":657,"title":{},"body":{"index.html":{}}}],["based",{"_index":589,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["board",{"_index":649,"title":{},"body":{"index.html":{}}}],["body",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["boolean",{"_index":155,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":672,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":670,"title":{},"body":{"modules.html":{}}}],["building",{"_index":606,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":149,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["canactivate(context",{"_index":151,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["cb",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["cb(null",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["channel",{"_index":621,"title":{},"body":{"index.html":{}}}],["check",{"_index":583,"title":{},"body":{"index.html":{}}}],["checkpassword",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuser",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuser.id",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuser.name",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuser.password",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":21,"title":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":256,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"overview.html":{}}}],["cli",{"_index":550,"title":{},"body":{"index.html":{}}}],["clicks",{"_index":603,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":588,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_exports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":168,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":169,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":170,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":315,"title":{},"body":{"modules/PrismaModule.html":{}}}],["cluster_prismamodule_exports",{"_index":317,"title":{},"body":{"modules/PrismaModule.html":{}}}],["cluster_prismamodule_providers",{"_index":316,"title":{},"body":{"modules/PrismaModule.html":{}}}],["cluster_schoolmodule",{"_index":379,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_schoolmodule_imports",{"_index":380,"title":{},"body":{"modules/SchoolModule.html":{}}}],["cluster_schoolmodule_providers",{"_index":381,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":440,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_imports",{"_index":441,"title":{},"body":{"modules/TaskModule.html":{}}}],["cluster_taskmodule_providers",{"_index":442,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["co",{"_index":555,"title":{},"body":{"index.html":{}}}],["come",{"_index":611,"title":{},"body":{"index.html":{}}}],["compare",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["compare(data.password",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(typeof",{"_index":463,"title":{},"body":{"injectables/TaskService.html":{}}}],["const",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/SchoolController.html":{},"injectables/TaskService.html":{},"interfaces/task.html":{}}}],["constructor",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["constructor(prisma",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{}}}],["context",{"_index":154,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"coverage.html":{},"index.html":{}}}],["controller('auth",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('school",{"_index":369,"title":{},"body":{"controllers/SchoolController.html":{}}}],["controller('task",{"_index":427,"title":{},"body":{"controllers/TaskController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["courses",{"_index":627,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":480,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":345,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{}}}],["create(@body",{"_index":370,"title":{},"body":{"controllers/SchoolController.html":{}}}],["create(createschooldto",{"_index":349,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["createdata",{"_index":458,"title":{},"body":{"injectables/TaskService.html":{}}}],["createschooldto",{"_index":255,"title":{"classes/CreateSchoolDto.html":{}},"body":{"classes/CreateSchoolDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["createtask",{"_index":399,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["createtask(@body",{"_index":429,"title":{},"body":{"controllers/TaskController.html":{}}}],["createtask(body",{"_index":404,"title":{},"body":{"controllers/TaskController.html":{}}}],["createtask(userid",{"_index":447,"title":{},"body":{"injectables/TaskService.html":{}}}],["createtaskdto",{"_index":283,"title":{"classes/CreateTaskDto.html":{}},"body":{"classes/CreateTaskDto.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["data",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["data.email",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.id_user",{"_index":457,"title":{},"body":{"injectables/TaskService.html":{}}}],["data.password",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.task_description",{"_index":468,"title":{},"body":{"injectables/TaskService.html":{}}}],["data.task_name",{"_index":467,"title":{},"body":{"injectables/TaskService.html":{}}}],["database",{"_index":566,"title":{},"body":{"index.html":{}}}],["datas",{"_index":460,"title":{},"body":{"injectables/TaskService.html":{}}}],["dataupdate",{"_index":465,"title":{},"body":{"injectables/TaskService.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"classes/UpdateTaskDto.html":{}}}],["deeper",{"_index":623,"title":{},"body":{"index.html":{}}}],["default",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["delete",{"_index":363,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["delete('/:id",{"_index":437,"title":{},"body":{"controllers/TaskController.html":{}}}],["delete(':id",{"_index":356,"title":{},"body":{"controllers/SchoolController.html":{}}}],["deletetaskbyid",{"_index":400,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["deletetaskbyid(@param('id",{"_index":438,"title":{},"body":{"controllers/TaskController.html":{}}}],["deletetaskbyid(id",{"_index":407,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":573,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":593,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":584,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":602,"title":{},"body":{"index.html":{}}}],["description",{"_index":680,"title":{},"body":{"properties.html":{}}}],["destination",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["dev",{"_index":568,"title":{},"body":{"index.html":{}}}],["development",{"_index":537,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":635,"title":{},"body":{"index.html":{}}}],["discord",{"_index":620,"title":{},"body":{"index.html":{}}}],["diskstorage",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["dive",{"_index":622,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":481,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dto/create",{"_index":366,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["dto/createtask.dto",{"_index":424,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["dto/login.dto",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/register.dto",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":368,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["dto/updatetask.dto",{"_index":425,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["e2e",{"_index":547,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":581,"title":{},"body":{"index.html":{}}}],["email",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["enableshutdownhooks",{"_index":322,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":324,"title":{},"body":{"injectables/PrismaService.html":{}}}],["ensure",{"_index":579,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":639,"title":{},"body":{"index.html":{}}}],["err",{"_index":160,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["example",{"_index":525,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":152,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["experience",{"_index":625,"title":{},"body":{"index.html":{}}}],["expired",{"_index":308,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["expiredin",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"interfaces/task.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["express",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["extends",{"_index":147,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateSchoolDto.html":{}}}],["extractjwt",{"_index":298,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":303,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["fast",{"_index":598,"title":{},"body":{"index.html":{}}}],["features",{"_index":607,"title":{},"body":{"index.html":{}}}],["few",{"_index":600,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"interfaces/task.html":{}}}],["file.originalname",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["file.path",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["fileinterceptor",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["fileinterceptor('avatar",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["filename",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["findall",{"_index":346,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["findone",{"_index":347,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["findone(@param('id",{"_index":373,"title":{},"body":{"controllers/SchoolController.html":{}}}],["findone(id",{"_index":352,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["focus",{"_index":605,"title":{},"body":{"index.html":{}}}],["follow",{"_index":643,"title":{},"body":{"index.html":{}}}],["found",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["framework",{"_index":616,"title":{},"body":{"index.html":{}}}],["full",{"_index":638,"title":{},"body":{"index.html":{}}}],["function",{"_index":491,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":519,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":527,"title":{},"body":{"index.html":{}}}],["generatejwt",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatejwt(payload",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["gensalt",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["get('/:id",{"_index":432,"title":{},"body":{"controllers/TaskController.html":{}}}],["get(':id",{"_index":353,"title":{},"body":{"controllers/SchoolController.html":{}}}],["get('profile",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["getalltask",{"_index":401,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["gettaskbyid",{"_index":402,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["gettaskbyid(@param('id",{"_index":433,"title":{},"body":{"controllers/TaskController.html":{}}}],["gettaskbyid(id",{"_index":412,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["getting",{"_index":521,"title":{"index.html":{}},"body":{}}],["global",{"_index":551,"title":{},"body":{"index.html":{}}}],["graph",{"_index":630,"title":{},"body":{"index.html":{}}}],["grow",{"_index":653,"title":{},"body":{"index.html":{}}}],["handlerequest",{"_index":150,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["handlerequest(err",{"_index":158,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["hands",{"_index":624,"title":{},"body":{"index.html":{}}}],["handy",{"_index":612,"title":{},"body":{"index.html":{}}}],["hash",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["hash(data.password",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":70,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":628,"title":{},"body":{"index.html":{}}}],["here",{"_index":660,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception('user",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://nestjs.com",{"_index":666,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.bad_request",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.not_found",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["id",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["id_user",{"_index":285,"title":{},"body":{"classes/CreateTaskDto.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["identifier",{"_index":482,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":304,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":330,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["imports",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"miscellaneous/functions.html":{},"interfaces/task.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":325,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"interfaces/task.html":{}}}],["information",{"_index":586,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":609,"title":{},"body":{"index.html":{}}}],["inject",{"_index":453,"title":{},"body":{"injectables/TaskService.html":{}}}],["inject(request",{"_index":456,"title":{},"body":{"injectables/TaskService.html":{}}}],["injectable",{"_index":66,"title":{"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["injectables",{"_index":67,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"overview.html":{}}}],["install",{"_index":523,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":535,"title":{},"body":{"index.html":{}}}],["interact",{"_index":631,"title":{},"body":{"index.html":{}}}],["interface",{"_index":495,"title":{"interfaces/task.html":{}},"body":{"coverage.html":{},"overview.html":{},"interfaces/task.html":{}}}],["interfaces",{"_index":682,"title":{},"body":{"interfaces/task.html":{}}}],["isemail",{"_index":273,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isemail()@isnotempty",{"_index":311,"title":{},"body":{"classes/LoginDto.html":{}}}],["isnotempty",{"_index":274,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty()@isemail",{"_index":335,"title":{},"body":{"classes/RegisterDto.html":{}}}],["isnotempty()@isstring",{"_index":313,"title":{},"body":{"classes/LoginDto.html":{}}}],["isnumberstring",{"_index":275,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["isoptional",{"_index":276,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["isoptional()@isstring",{"_index":477,"title":{},"body":{"classes/UpdateTaskDto.html":{}}}],["isstring",{"_index":277,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateTaskDto.html":{}}}],["isstring()@isemail()@isoptional",{"_index":266,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["isstring()@isnotempty",{"_index":270,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/RegisterDto.html":{}}}],["isstring()@isnotempty()@minlength(8",{"_index":338,"title":{},"body":{"classes/RegisterDto.html":{}}}],["isstring()@isnumberstring()@isoptional()@minlength(7)@maxlength(20",{"_index":268,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["isstring()@isoptional",{"_index":264,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["job",{"_index":646,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":648,"title":{},"body":{"index.html":{}}}],["join",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":177,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":302,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":175,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":171,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":663,"title":{},"body":{"index.html":{}}}],["key",{"_index":576,"title":{},"body":{"index.html":{}}}],["learn",{"_index":615,"title":{},"body":{"index.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["license",{"_index":669,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":651,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":645,"title":{},"body":{"index.html":{}}}],["login",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(data",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":82,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["looking",{"_index":587,"title":{},"body":{"index.html":{}}}],["loop",{"_index":641,"title":{},"body":{"index.html":{}}}],["makes",{"_index":596,"title":{},"body":{"index.html":{}}}],["managing",{"_index":608,"title":{},"body":{"index.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"interfaces/task.html":{},"miscellaneous/variables.html":{}}}],["mau",{"_index":591,"title":{},"body":{"index.html":{}}}],["maxlength",{"_index":278,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["maxlength(20",{"_index":282,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["message",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["metadata",{"_index":515,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["migrate",{"_index":567,"title":{},"body":{"index.html":{}}}],["migratedeployment",{"_index":570,"title":{},"body":{"index.html":{}}}],["minlength",{"_index":279,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/RegisterDto.html":{}}}],["minlength(7",{"_index":281,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["minlength(8",{"_index":340,"title":{},"body":{"classes/RegisterDto.html":{}}}],["miscellaneous",{"_index":518,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":650,"title":{},"body":{"index.html":{}}}],["mo",{"_index":552,"title":{},"body":{"index.html":{}}}],["mode",{"_index":540,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":585,"title":{},"body":{"index.html":{}}}],["multer",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["myśliwiec",{"_index":664,"title":{},"body":{"index.html":{}}}],["nama",{"_index":531,"title":{},"body":{"index.html":{}}}],["namaapiprisma",{"_index":565,"title":{},"body":{"index.html":{}}}],["namacontroller",{"_index":556,"title":{},"body":{"index.html":{}}}],["namacontrollergenerate",{"_index":557,"title":{},"body":{"index.html":{}}}],["namamodule",{"_index":553,"title":{},"body":{"index.html":{}}}],["namamodulegenerate",{"_index":554,"title":{},"body":{"index.html":{}}}],["namaservice",{"_index":560,"title":{},"body":{"index.html":{}}}],["namaservicegenerate",{"_index":561,"title":{},"body":{"index.html":{}}}],["name",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["need",{"_index":636,"title":{},"body":{"index.html":{}}}],["nest",{"_index":529,"title":{},"body":{"index.html":{}}}],["nest@cli",{"_index":524,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":668,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":574,"title":{},"body":{"index.html":{}}}],["nestjs/cliinitial",{"_index":528,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":455,"title":{},"body":{"injectables/TaskService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":176,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":473,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":164,"title":{},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["new",{"_index":167,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"coverage.html":{},"index.html":{}}}],["npm",{"_index":526,"title":{},"body":{"index.html":{}}}],["number",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateTaskDto.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"interfaces/task.html":{}}}],["observable",{"_index":157,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["offer",{"_index":647,"title":{},"body":{"index.html":{}}}],["official",{"_index":592,"title":{},"body":{"index.html":{}}}],["onmoduleinit",{"_index":323,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":652,"title":{},"body":{"index.html":{}}}],["optional",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["out",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":673,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":499,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":362,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["param('id",{"_index":375,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["parameters",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["parseintpipe",{"_index":419,"title":{},"body":{"controllers/TaskController.html":{}}}],["part",{"_index":637,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":472,"title":{},"body":{"classes/UpdateSchoolDto.html":{}}}],["partialtype(createschooldto",{"_index":471,"title":{},"body":{"classes/UpdateSchoolDto.html":{}}}],["passport",{"_index":300,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":174,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":178,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":297,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":292,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["patch",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["patch('/:id",{"_index":435,"title":{},"body":{"controllers/TaskController.html":{}}}],["patch(':id",{"_index":360,"title":{},"body":{"controllers/SchoolController.html":{}}}],["patch('profile/avatar",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["path",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.exp",{"_index":309,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.name",{"_index":307,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.userid",{"_index":306,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["phone",{"_index":261,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["platform",{"_index":590,"title":{},"body":{"index.html":{}}}],["please",{"_index":619,"title":{},"body":{"index.html":{}}}],["possible",{"_index":582,"title":{},"body":{"index.html":{}}}],["post",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["post('login",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["prisma",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"index.html":{}}}],["prisma.service",{"_index":319,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":329,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}}}],["prisma/prisma.service",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["prismaclient",{"_index":321,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":42,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":45,"title":{"injectables/PrismaService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["process.env.jwt_expired_in",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["process.env.jwt_secret",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["process.on('beforeexit",{"_index":332,"title":{},"body":{"injectables/PrismaService.html":{}}}],["production",{"_index":542,"title":{},"body":{"index.html":{}}}],["profile",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["profile(@req",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(req",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(userid",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["project",{"_index":530,"title":{},"body":{"index.html":{}}}],["projectproject",{"_index":532,"title":{},"body":{"index.html":{}}}],["promise",{"_index":156,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["properties",{"_index":259,"title":{"properties.html":{}},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateTaskDto.html":{},"properties.html":{},"interfaces/task.html":{}}}],["property",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["public",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["public/uploads/image/avatar",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["questions",{"_index":617,"title":{},"body":{"index.html":{}}}],["read",{"_index":659,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/SchoolController.html":{}}}],["ready",{"_index":572,"title":{},"body":{"index.html":{}}}],["real",{"_index":632,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":514,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(data",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registerdto",{"_index":96,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["registered",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["regiter",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["remove",{"_index":348,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["remove(@param('id",{"_index":377,"title":{},"body":{"controllers/SchoolController.html":{}}}],["remove(id",{"_index":355,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["req",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["request",{"_index":454,"title":{},"body":{"injectables/TaskService.html":{}}}],["requiring",{"_index":599,"title":{},"body":{"index.html":{}}}],["res",{"_index":564,"title":{},"body":{"index.html":{}}}],["reset",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["resources",{"_index":610,"title":{},"body":{"index.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"interfaces/task.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["rootpath",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":536,"title":{},"body":{"index.html":{}}}],["runs",{"_index":580,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":162,"title":{},"body":{"injectables/AuthGuard.html":{},"dependencies.html":{}}}],["s",{"_index":559,"title":{},"body":{"index.html":{}}}],["school",{"_index":341,"title":{"classes/School.html":{}},"body":{"classes/School.html":{},"controllers/SchoolController.html":{},"coverage.html":{}}}],["school.controller",{"_index":383,"title":{},"body":{"modules/SchoolModule.html":{}}}],["school.dto",{"_index":367,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{}}}],["school.dto.ts",{"_index":258,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["school.dto.ts:14",{"_index":271,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:18",{"_index":272,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:23",{"_index":267,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:27",{"_index":265,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:34",{"_index":269,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.service",{"_index":365,"title":{},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{}}}],["school/school.module",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["school_code",{"_index":262,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school_name",{"_index":263,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["schoolcontroller",{"_index":343,"title":{"controllers/SchoolController.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"coverage.html":{}}}],["schoolmodule",{"_index":43,"title":{"modules/SchoolModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SchoolModule.html":{},"modules.html":{},"overview.html":{}}}],["schoolservice",{"_index":364,"title":{"injectables/SchoolService.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"coverage.html":{},"overview.html":{}}}],["secret",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":305,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["servestaticmodule",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["service",{"_index":558,"title":{},"body":{"index.html":{}}}],["session",{"_index":182,"title":{},"body":{"modules/AuthModule.html":{}}}],["setup",{"_index":533,"title":{},"body":{"index.html":{}}}],["shadow",{"_index":569,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{}}}],["simple",{"_index":601,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"index.html":{},"interfaces/task.html":{}}}],["sponsors",{"_index":655,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":520,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../task.data.ts",{"_index":697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":68,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":69,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:24",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:29",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:35",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:55",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.guard.ts",{"_index":146,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["src/auth/auth.guard.ts:11",{"_index":153,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:16",{"_index":159,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/auth/auth.module.ts",{"_index":172,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:15",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:37",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:71",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:80",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:92",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":310,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:10",{"_index":314,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:6",{"_index":312,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/register.dto.ts",{"_index":334,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/auth/dto/register.dto.ts:10",{"_index":336,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:15",{"_index":339,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:6",{"_index":337,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":291,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:14",{"_index":296,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:6",{"_index":294,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/main.ts",{"_index":490,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module.ts",{"_index":318,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service.ts",{"_index":320,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":326,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":328,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/school/dto/create",{"_index":257,"title":{},"body":{"classes/CreateSchoolDto.html":{},"coverage.html":{}}}],["src/school/dto/update",{"_index":470,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["src/school/entities/school.entity.ts",{"_index":342,"title":{},"body":{"classes/School.html":{},"coverage.html":{}}}],["src/school/school.controller.ts",{"_index":344,"title":{},"body":{"controllers/SchoolController.html":{},"coverage.html":{}}}],["src/school/school.controller.ts:19",{"_index":350,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:28",{"_index":351,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:37",{"_index":354,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:46",{"_index":361,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:58",{"_index":357,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.module.ts",{"_index":382,"title":{},"body":{"modules/SchoolModule.html":{}}}],["src/school/school.service.ts",{"_index":384,"title":{},"body":{"injectables/SchoolService.html":{},"coverage.html":{}}}],["src/school/school.service.ts:10",{"_index":386,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:16",{"_index":387,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:20",{"_index":388,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:26",{"_index":390,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:33",{"_index":389,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:7",{"_index":385,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/task/data/task.data.ts",{"_index":494,"title":{},"body":{"coverage.html":{},"interfaces/task.html":{},"miscellaneous/variables.html":{}}}],["src/task/dto/createtask.dto.ts",{"_index":284,"title":{},"body":{"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["src/task/dto/createtask.dto.ts:12",{"_index":289,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["src/task/dto/createtask.dto.ts:4",{"_index":288,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["src/task/dto/createtask.dto.ts:8",{"_index":290,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["src/task/dto/updatetask.dto.ts",{"_index":475,"title":{},"body":{"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["src/task/dto/updatetask.dto.ts:12",{"_index":478,"title":{},"body":{"classes/UpdateTaskDto.html":{}}}],["src/task/dto/updatetask.dto.ts:4",{"_index":476,"title":{},"body":{"classes/UpdateTaskDto.html":{}}}],["src/task/dto/updatetask.dto.ts:8",{"_index":479,"title":{},"body":{"classes/UpdateTaskDto.html":{}}}],["src/task/task.controller.ts",{"_index":397,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["src/task/task.controller.ts:27",{"_index":406,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:33",{"_index":411,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:39",{"_index":414,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:45",{"_index":418,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:54",{"_index":409,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.module.ts",{"_index":443,"title":{},"body":{"modules/TaskModule.html":{}}}],["src/task/task.service.ts",{"_index":445,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["src/task/task.service.ts:14",{"_index":448,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:25",{"_index":450,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:35",{"_index":451,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:46",{"_index":452,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:60",{"_index":449,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:8",{"_index":446,"title":{},"body":{"injectables/TaskService.html":{}}}],["start",{"_index":538,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":541,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":543,"title":{},"body":{"index.html":{}}}],["started",{"_index":522,"title":{"index.html":{}},"body":{}}],["statements",{"_index":483,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["statuscode",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/SchoolController.html":{},"injectables/TaskService.html":{}}}],["stay",{"_index":640,"title":{},"body":{"index.html":{}}}],["steps",{"_index":577,"title":{},"body":{"index.html":{}}}],["storage",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["straightforward",{"_index":597,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":299,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"classes/UpdateTaskDto.html":{},"interfaces/task.html":{}}}],["succesfully",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["successfully",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["super",{"_index":301,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":165,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["support",{"_index":618,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":671,"title":{},"body":{"modules.html":{}}}],["table",{"_index":498,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":497,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":578,"title":{},"body":{"index.html":{}}}],["task",{"_index":398,"title":{"interfaces/task.html":{}},"body":{"controllers/TaskController.html":{},"coverage.html":{},"interfaces/task.html":{},"miscellaneous/variables.html":{}}}],["task.controller",{"_index":444,"title":{},"body":{"modules/TaskModule.html":{}}}],["task.service",{"_index":423,"title":{},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{}}}],["task/task.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["task_description",{"_index":286,"title":{},"body":{"classes/CreateTaskDto.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"interfaces/task.html":{}}}],["task_description:\"description",{"_index":690,"title":{},"body":{"interfaces/task.html":{},"miscellaneous/variables.html":{}}}],["task_description:string",{"_index":686,"title":{},"body":{"interfaces/task.html":{}}}],["task_id",{"_index":683,"title":{},"body":{"interfaces/task.html":{}}}],["task_id:1",{"_index":688,"title":{},"body":{"interfaces/task.html":{},"miscellaneous/variables.html":{}}}],["task_id:2",{"_index":691,"title":{},"body":{"interfaces/task.html":{},"miscellaneous/variables.html":{}}}],["task_id:3",{"_index":693,"title":{},"body":{"interfaces/task.html":{},"miscellaneous/variables.html":{}}}],["task_id:4",{"_index":695,"title":{},"body":{"interfaces/task.html":{},"miscellaneous/variables.html":{}}}],["task_id:number",{"_index":684,"title":{},"body":{"interfaces/task.html":{}}}],["task_name",{"_index":287,"title":{},"body":{"classes/CreateTaskDto.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"interfaces/task.html":{}}}],["task_name:\"task",{"_index":689,"title":{},"body":{"interfaces/task.html":{},"miscellaneous/variables.html":{}}}],["task_name:string",{"_index":685,"title":{},"body":{"interfaces/task.html":{}}}],["taskcontroller",{"_index":396,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskmodule",{"_index":44,"title":{"modules/TaskModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["tasks",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tasks:task",{"_index":687,"title":{},"body":{"interfaces/task.html":{}}}],["taskservice",{"_index":422,"title":{"injectables/TaskService.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["test",{"_index":546,"title":{},"body":{"index.html":{}}}],["test:covgenerate",{"_index":549,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":548,"title":{},"body":{"index.html":{}}}],["tests",{"_index":544,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":654,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":331,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(data",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.profile(req.user.userid",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(data",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.uploadavatar(req.user.userid",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.generatejwt",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(payload",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.schools.create",{"_index":391,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.delete",{"_index":395,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.findfirst",{"_index":393,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.findmany",{"_index":392,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.update",{"_index":394,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.tasks.create",{"_index":459,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.delete",{"_index":469,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.findfirst",{"_index":464,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.findmany",{"_index":461,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.update",{"_index":466,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.users.create",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.findfirst",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.update",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.req.user.userid",{"_index":462,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.schoolservice.create(createschooldto",{"_index":371,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.findall",{"_index":372,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.findone(+id",{"_index":374,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.remove(+id",{"_index":378,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.update(+id",{"_index":376,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.taskservice.createtask(req.user.userid",{"_index":430,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.deletetaskbyid(id",{"_index":439,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.getalltask",{"_index":431,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.gettaskbyid(id",{"_index":434,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.updatetaskbyid(id",{"_index":436,"title":{},"body":{"controllers/TaskController.html":{}}}],["throw",{"_index":166,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["time",{"_index":633,"title":{},"body":{"index.html":{}}}],["token",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["touch",{"_index":661,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":509,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["twitter",{"_index":667,"title":{},"body":{"index.html":{}}}],["type",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"interfaces/task.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":474,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"dependencies.html":{}}}],["types/bcrypt",{"_index":506,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":161,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["unit",{"_index":545,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["unlicensed",{"_index":681,"title":{},"body":{"properties.html":{}}}],["update",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["update(id",{"_index":358,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["updateavatar",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["updates",{"_index":642,"title":{},"body":{"index.html":{}}}],["updateschooldto",{"_index":359,"title":{"classes/UpdateSchoolDto.html":{}},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["updatetaskbyid",{"_index":403,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["updatetaskbyid(id",{"_index":415,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["updatetaskdto",{"_index":416,"title":{"classes/UpdateTaskDto.html":{}},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["uploadavatar",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["uploadavatar(@req",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["uploadavatar(req",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["uploadavatar(userid",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadedfile",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["useguards(authguard",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["useguards(authguard)@delete('/:id",{"_index":408,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@get",{"_index":410,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@get('/:id",{"_index":413,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@get('profile",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard)@patch('/:id",{"_index":417,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@useinterceptors(undefined)@patch('profile/avatar",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard)@usepipes(validationpipe)@post",{"_index":405,"title":{},"body":{"controllers/TaskController.html":{}}}],["useinterceptors",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["usepipes",{"_index":420,"title":{},"body":{"controllers/TaskController.html":{}}}],["usepipes(validationpipe",{"_index":428,"title":{},"body":{"controllers/TaskController.html":{}}}],["user",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["userid",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/TaskService.html":{}}}],["using",{"_index":634,"title":{},"body":{"index.html":{}}}],["validate",{"_index":293,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":295,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validationpipe",{"_index":421,"title":{},"body":{"controllers/TaskController.html":{}}}],["validator",{"_index":280,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateTaskDto.html":{},"dependencies.html":{}}}],["value",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":496,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":696,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":678,"title":{},"body":{"properties.html":{}}}],["video",{"_index":626,"title":{},"body":{"index.html":{}}}],["visit",{"_index":614,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":629,"title":{},"body":{"index.html":{}}}],["watch",{"_index":539,"title":{},"body":{"index.html":{}}}],["website",{"_index":665,"title":{},"body":{"index.html":{}}}],["working",{"_index":613,"title":{},"body":{"index.html":{}}}],["world",{"_index":71,"title":{},"body":{"injectables/AppService.html":{}}}],["wroong",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["x",{"_index":644,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":534,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":658,"title":{},"body":{"index.html":{}}}],["you're",{"_index":571,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nAppModule -->\n\nTaskModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nAppModule->PrismaService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            SchoolModule\n                        \n                        \n                            TaskModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TaskModule } from './task/task.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { PrismaService } from './prisma/prisma.service';\nimport { AuthModule } from './auth/auth.module';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport { SchoolModule } from './school/school.module';\n\n@Module({\n  imports: [\n    TaskModule,\n    PrismaModule,\n    AuthModule,\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'public'),\n    }),\n    SchoolModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService, PrismaService],\n  exports: [PrismaService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    Async\n                                profile\n                            \n                            \n                                    \n                                    Async\n                                register\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(data: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                        \n                    profile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('profile')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(data: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadAvatar(req, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@UseInterceptors(undefined)@Patch('profile/avatar')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Patch,\n  Post,\n  Req,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { RegisterDto } from './dto/register.dto';\nimport { AuthService } from './auth.service';\nimport { LoginDto } from './dto/login.dto';\nimport { AuthGuard } from './auth.guard';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Post('register')\n  async register(@Body() data: RegisterDto) {\n    return await this.authService.register(data);\n  }\n\n  @Post('login')\n  async login(@Body() data: LoginDto) {\n    return await this.authService.login(data);\n  }\n\n  @UseGuards(AuthGuard)\n  @Get('profile')\n  async profile(@Req() req) {\n    const user = await this.authService.profile(req.user.userId);\n    return {\n      statusCode: 200,\n      data: user,\n    };\n  }\n\n  @UseGuards(AuthGuard)\n  @UseInterceptors(\n    FileInterceptor('avatar', {\n      storage: diskStorage({\n        destination: 'public/uploads/image/avatar',\n        filename: (req, file, cb) => {\n          cb(null, file.originalname);\n        },\n      }),\n    }),\n  )\n  @Patch('profile/avatar')\n  async uploadAvatar(@Req() req, @UploadedFile() file: Express.Multer.File) {\n    return await this.authService.uploadAvatar(req.user.userId, file.path);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuardPassport('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guard.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guard.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { AuthGuard as AuthGuardPassport } from '@nestjs/passport';\n@Injectable()\nexport class AuthGuard extends AuthGuardPassport('jwt') {\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    return super.canActivate(context);\n  }\n  handleRequest(err, user, info) {\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from '../prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    }),\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: {\n        expiresIn: process.env.JWT_EXPIRED_IN,\n      },\n    }),\n  ],\n  providers: [AuthService, JwtStrategy],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateJWT\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                profile\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateJWT\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateJWT(payload: any, expiredIn: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                expiredIn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    process.env.JWT_EXPIRED_IN\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(data: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                        \n                    profile(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(data: RegisterDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadAvatar(userId: number, avatar: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                avatar\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { RegisterDto } from './dto/register.dto';\nimport { hash, genSalt, compare } from 'bcrypt';\nimport { LoginDto } from './dto/login.dto';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private prisma: PrismaService,\n    private jwtService: JwtService,\n  ) {}\n\n  async register(data: RegisterDto) {\n    const checkUserExists = await this.prisma.users.findFirst({\n      where: { email: data.email },\n    });\n    if (checkUserExists) {\n      throw new HttpException(\n        'user already registered',\n        HttpStatus.BAD_REQUEST,\n      );\n    }\n    data.password = await hash(data.password, await genSalt());\n\n    await this.prisma.users.create({\n      data: data,\n    });\n\n    return {\n      statusCode: 200,\n      message: 'regiter succesfully',\n    };\n  }\n\n  async login(data: LoginDto) {\n    const checkUser = await this.prisma.users.findFirst({\n      where: {\n        email: data.email,\n      },\n    });\n    if (!checkUser) {\n      throw new HttpException(\n        'wroong email or password !',\n        HttpStatus.BAD_REQUEST,\n      );\n    }\n    const checkPassword = await compare(data.password, checkUser.password);\n    if (!checkPassword) {\n      throw new HttpException(\n        'wroong email or password',\n        HttpStatus.BAD_REQUEST,\n      );\n    } else {\n      const token = await this.generateJWT({\n        userId: checkUser.id,\n        name: checkUser.name,\n      });\n\n      return {\n        statusCode: 200,\n        message: 'login successfully',\n        data: {\n          accessToken: token,\n        },\n      };\n    }\n  }\n\n  async generateJWT(\n    payload: any,\n    expiredIn: string = process.env.JWT_EXPIRED_IN,\n  ) {\n    return await this.jwtService.sign(payload, {\n      expiresIn: expiredIn,\n    });\n  }\n\n  async profile(userId: number) {\n    return this.prisma.users.findFirst({\n      where: { id: userId },\n      select: {\n        name: true,\n        email: true,\n        avatar: true,\n        tasks: true,\n      },\n    });\n  }\n\n  async uploadAvatar(userId: number, avatar: string) {\n    const checkUser = await this.prisma.users.findFirst({\n      where: { id: userId },\n    });\n    if (!checkUser) {\n      throw new HttpException('user not found', HttpStatus.NOT_FOUND);\n    }\n    const updateAvatar = await this.prisma.users.update({\n      data: { avatar },\n      where: { id: userId },\n    });\n    return {\n      statusCode: 200,\n      message: 'update avatar successfully',\n      data: updateAvatar,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSchoolDto.html":{"url":"classes/CreateSchoolDto.html","title":"class - CreateSchoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSchoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/dto/create-school.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                phone\n                            \n                            \n                                    \n                                    \n                                school_code\n                            \n                            \n                                    \n                                    \n                                school_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNumberString()@IsOptional()@MinLength(7)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        school_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        school_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsNumberString,\n  IsOptional,\n  IsString,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class CreateSchoolDto {\n  @IsString()\n  @IsNotEmpty()\n  school_code: string;\n\n  @IsString()\n  @IsNotEmpty()\n  school_name: string;\n\n  @IsString()\n  @IsEmail()\n  @IsOptional()\n  email?: string;\n\n  @IsString()\n  @IsOptional()\n  address?: string;\n\n  @IsString()\n  @IsNumberString()\n  @IsOptional()\n  @MinLength(7)\n  @MaxLength(20)\n  phone?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTaskDto.html":{"url":"classes/CreateTaskDto.html","title":"class - CreateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/dto/createTask.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id_user\n                            \n                            \n                                    \n                                    \n                                task_description\n                            \n                            \n                                    \n                                    \n                                task_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id_user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/task/dto/createTask.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/createTask.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/createTask.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateTaskDto {\n  id_user: number;\n\n  @IsString()\n  @IsNotEmpty()\n  task_name: string;\n\n  @IsString()\n  @IsNotEmpty()\n  task_description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.strategy.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n  async validate(payload: any) {\n    return {\n      userId: payload.userId,\n      name: payload.name,\n      expired: payload.exp,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class LoginDto {\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                        \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n                                            \n                                                        INestApplication\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    process.on('beforeExit', () => {\n      app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(8)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString, MinLength } from 'class-validator';\n\nexport class RegisterDto {\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(8)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/School.html":{"url":"classes/School.html","title":"class - School","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  School\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/entities/school.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class School {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SchoolController.html":{"url":"controllers/SchoolController.html","title":"controller - SchoolController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SchoolController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/school.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                school\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSchoolDto: CreateSchoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSchoolDto\n                                            \n                                                            CreateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateSchoolDto: UpdateSchoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSchoolDto\n                                            \n                                                            UpdateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { SchoolService } from './school.service';\nimport { CreateSchoolDto } from './dto/create-school.dto';\nimport { UpdateSchoolDto } from './dto/update-school.dto';\n\n@Controller('school')\nexport class SchoolController {\n  constructor(private readonly schoolService: SchoolService) {}\n\n  @Post()\n  async create(@Body() createSchoolDto: CreateSchoolDto) {\n    const data = await this.schoolService.create(createSchoolDto);\n    return {\n      statusCode: 200,\n      data,\n    };\n  }\n\n  @Get()\n  async findAll() {\n    const data = await this.schoolService.findAll();\n    return {\n      statusCode: 200,\n      data,\n    };\n  }\n\n  @Get(':id')\n  async findOne(@Param('id') id: string) {\n    const data = await this.schoolService.findOne(+id);\n    return {\n      statusCode: 200,\n      data,\n    };\n  }\n\n  @Patch(':id')\n  async update(\n    @Param('id') id: string,\n    @Body() updateSchoolDto: UpdateSchoolDto,\n  ) {\n    const data = await this.schoolService.update(+id, updateSchoolDto);\n    return {\n      statusCode: 200,\n      data,\n    };\n  }\n\n  @Delete(':id')\n  async remove(@Param('id') id: string) {\n    const data = await this.schoolService.remove(+id);\n    return {\n      statusCode: 200,\n      data,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SchoolModule.html":{"url":"modules/SchoolModule.html","title":"module - SchoolModule","body":"\n                   \n\n\n\n\n    Modules\n    SchoolModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_imports\n\n\n\ncluster_SchoolModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolModule -->\n\nPrismaModule->SchoolModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/school/school.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SchoolService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SchoolController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SchoolService } from './school.service';\nimport { SchoolController } from './school.controller';\nimport { PrismaModule } from '../prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [SchoolController],\n  providers: [SchoolService],\n})\nexport class SchoolModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchoolService.html":{"url":"injectables/SchoolService.html","title":"injectable - SchoolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SchoolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/school.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/school/school.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSchoolDto: CreateSchoolDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSchoolDto\n                                            \n                                                            CreateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateSchoolDto: UpdateSchoolDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSchoolDto\n                                            \n                                                            UpdateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateSchoolDto } from './dto/create-school.dto';\nimport { UpdateSchoolDto } from './dto/update-school.dto';\nimport { PrismaService } from '../prisma/prisma.service';\n\n@Injectable()\nexport class SchoolService {\n  constructor(private prisma: PrismaService) {}\n\n  async create(createSchoolDto: CreateSchoolDto) {\n    return await this.prisma.schools.create({\n      data: createSchoolDto,\n    });\n  }\n\n  async findAll() {\n    return this.prisma.schools.findMany({});\n  }\n\n  async findOne(id: number) {\n    return await this.prisma.schools.findFirst({\n      where: { id },\n    });\n  }\n\n  async update(id: number, updateSchoolDto: UpdateSchoolDto) {\n    return await this.prisma.schools.update({\n      where: { id },\n      data: updateSchoolDto,\n    });\n  }\n\n  async remove(id: number) {\n    return await this.prisma.schools.delete({\n      where: { id },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                task\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                createTask\n                            \n                            \n                                    \n                                    \n                                    Async\n                                deleteTaskByID\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getAllTask\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getTaskById\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateTaskById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        createTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTask(body: CreateTaskDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@UsePipes(ValidationPipe)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateTaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        deleteTaskByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteTaskByID(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Delete('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getAllTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllTask()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTaskById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        updateTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTaskById(id, data: UpdateTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Patch('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            UpdateTaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Post,\n  Get,\n  Param,\n  Patch,\n  Delete,\n  ParseIntPipe,\n  UsePipes,\n  ValidationPipe,\n  UseGuards,\n  Req,\n} from '@nestjs/common';\nimport { TaskService } from './task.service';\nimport { CreateTaskDto } from './dto/createTask.dto';\nimport { UpdateTaskDto } from './dto/updateTask.dto';\nimport { AuthGuard } from '../auth/auth.guard';\n\n@Controller('task')\nexport class TaskController {\n  constructor(private taskService: TaskService) {}\n\n  @UseGuards(AuthGuard)\n  @UsePipes(ValidationPipe)\n  @Post()\n  async createTask(@Body() body: CreateTaskDto, @Req() req) {\n    return await this.taskService.createTask(req.user.userId, body);\n  }\n\n  @UseGuards(AuthGuard)\n  @Get()\n  async getAllTask() {\n    return await this.taskService.getAllTask();\n  }\n\n  @UseGuards(AuthGuard)\n  @Get('/:id')\n  async getTaskById(@Param('id', ParseIntPipe) id: number) {\n    return await this.taskService.getTaskById(id);\n  }\n\n  @UseGuards(AuthGuard)\n  @Patch('/:id')\n  async updateTaskById(\n    @Param('id', ParseIntPipe) id,\n    @Body() data: UpdateTaskDto,\n  ) {\n    return await this.taskService.updateTaskById(id, data);\n  }\n\n  @UseGuards(AuthGuard)\n  @Delete('/:id')\n  async deleteTaskByID(@Param('id', ParseIntPipe) id) {\n    return await this.taskService.deleteTaskById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_imports\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nPrismaModule->TaskModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nTaskModule -->\n\nTaskService->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/task/task.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TaskService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TaskController } from './task.controller';\nimport { TaskService } from './task.service';\nimport { PrismaModule } from '../prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [TaskController],\n  providers: [TaskService],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/task.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTask\n                            \n                            \n                                    Async\n                                deleteTaskById\n                            \n                            \n                                    Async\n                                getAllTask\n                            \n                            \n                                    Async\n                                getTaskById\n                            \n                            \n                                    Async\n                                updateTaskById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, req)\n                    \n                \n                        \n                            \n                                Defined in src/task/task.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        req\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTask(userId: number, data: CreateTaskDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            CreateTaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteTaskById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTaskById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTaskById(id: number, data: UpdateTaskDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            UpdateTaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { CreateTaskDto } from './dto/createTask.dto';\nimport { UpdateTaskDto } from './dto/updateTask.dto';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { REQUEST } from '@nestjs/core';\n\n@Injectable()\nexport class TaskService {\n  constructor(\n    private prisma: PrismaService,\n    @Inject(REQUEST) private req,\n  ) {}\n\n  async createTask(userId: number, data: CreateTaskDto) {\n    data.id_user = userId;\n    const createData = await this.prisma.tasks.create({\n      data,\n    });\n    return {\n      statusCode: 200,\n      data: createData,\n    };\n  }\n\n  async getAllTask() {\n    const datas = await this.prisma.tasks.findMany({\n      where: { id_user: this.req.user.userId },\n    });\n    return {\n      statusCode: 200,\n      data: datas,\n    };\n  }\n\n  async getTaskById(id: number) {\n    console.log(typeof id);\n    const data = await this.prisma.tasks.findFirst({\n      where: { id, id_user: this.req.user.userId },\n    });\n    return {\n      statusCode: 200,\n      data: data,\n    };\n  }\n\n  async updateTaskById(id: number, data: UpdateTaskDto) {\n    const dataUpdate = await this.prisma.tasks.update({\n      where: { id, id_user: this.req.user.userId },\n      data: {\n        task_name: data.task_name,\n        task_description: data.task_description,\n      },\n    });\n    return {\n      statusCode: 200,\n      data: dataUpdate,\n    };\n  }\n\n  async deleteTaskById(id: number) {\n    const data = await this.prisma.tasks.delete({\n      where: { id, id_user: this.req.user.userId },\n    });\n    return {\n      statusCode: 200,\n      data: data,\n      message: 'Delete successfully',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSchoolDto.html":{"url":"classes/UpdateSchoolDto.html","title":"class - UpdateSchoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSchoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/dto/update-school.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateSchoolDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSchoolDto } from './create-school.dto';\n\nexport class UpdateSchoolDto extends PartialType(CreateSchoolDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTaskDto.html":{"url":"classes/UpdateTaskDto.html","title":"class - UpdateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/dto/updateTask.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id_user\n                            \n                            \n                                    \n                                    \n                                task_description\n                            \n                            \n                                    \n                                    \n                                task_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id_user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/task/dto/updateTask.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/updateTask.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/updateTask.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from 'class-validator';\n\nexport class UpdateTaskDto {\n  id_user: number;\n\n  @IsOptional()\n  @IsString()\n  task_name: string;\n\n  @IsOptional()\n  @IsString()\n  task_description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.guard.ts\n            \n            injectable\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/school/dto/create-school.dto.ts\n            \n            class\n            CreateSchoolDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/school/dto/update-school.dto.ts\n            \n            class\n            UpdateSchoolDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/school/entities/school.entity.ts\n            \n            class\n            School\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/school/school.controller.ts\n            \n            controller\n            SchoolController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/school/school.service.ts\n            \n            injectable\n            SchoolService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/task/data/task.data.ts\n            \n            interface\n            task\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/task/data/task.data.ts\n            \n            variable\n            tasks\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/task/dto/createTask.dto.ts\n            \n            class\n            CreateTaskDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/dto/updateTask.dto.ts\n            \n            class\n            UpdateTaskDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/task/task.service.ts\n            \n            injectable\n            TaskService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.4.8\n        \n            @nestjs/core : ^10.4.8\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/serve-static : ^4.0.2\n        \n            @prisma/client : ^5.22.0\n        \n            @types/bcrypt : ^5.0.2\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nInstall nest@cli\nExample :$ npm i -g @nestjs/cliInitial new Nest Project\nExample :$ nest new nama-projectProject setup\nExample :$ yarn installCompile and run the project\nExample :# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodRun tests\nExample :# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covGenerate Module\nExample :# nest cli global\n$ nest g mo namaModule\n\n# nest on project\n$ yarn nest g mo namaModuleGenerate Controller\nExample :# nest cli global\n$ nest g co namaController\n\n# nest on project\n$ yarn nest g co namaControllerGenerate Service\nExample :# nest cli global\n$ nest g s namaService\n\n# nest on project\n$ yarn nest g s namaServiceGenerate API Automatic\nExample :# nest cli global\n$ nest g res namaapiPrisma Database Migrate\nExample :# migrate for dev if you have shadow database\n$ yarn prisma migrate dev\n\n# migrate for production\n$ yarn prisma migrateDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ yarn install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SchoolModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_providers\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolModule -->\n\nPrismaModule->SchoolModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nPrismaModule->TaskModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\nAppModule -->\n\nTaskModule->AppModule\n\n\n\nPrismaService  -->\n\nAppModule->PrismaService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nTaskModule -->\n\nTaskService->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/task.html":{"url":"interfaces/task.html","title":"interface - task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/data/task.data.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            task_description\n                                        \n                                \n                                \n                                        \n                                            task_id\n                                        \n                                \n                                \n                                        \n                                            task_name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        task_description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface task{\n    task_id:number\n    task_name:string\n    task_description:string\n}\n\nexport const tasks:task[]=[\n    {\n        task_id:1,\n        task_name:\"task 1\",\n        task_description:\"description 1\"\n    },\n    {\n        task_id:2,\n        task_name:\"task 2\",\n        task_description:\"description 2\"\n    },\n    {\n        task_id:3,\n        task_name:\"task 3\",\n        task_description:\"description 3\"\n    },\n    {\n        task_id:4,\n        task_name:\"task 4\",\n        task_description:\"description 4\"\n    }\n]\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            tasks   (src/.../task.data.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/task/data/task.data.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         task[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n        task_id:1,\n        task_name:\"task 1\",\n        task_description:\"description 1\"\n    },\n    {\n        task_id:2,\n        task_name:\"task 2\",\n        task_description:\"description 2\"\n    },\n    {\n        task_id:3,\n        task_name:\"task 3\",\n        task_description:\"description 3\"\n    },\n    {\n        task_id:4,\n        task_name:\"task 4\",\n        task_description:\"description 4\"\n    }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
